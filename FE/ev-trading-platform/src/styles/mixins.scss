// src/styles/mixins.scss
@import './variables';

// ========================================
// 1. RESPONSIVE BREAKPOINTS
// ========================================

// Mobile devices (< 600px)
@mixin mobile {
  @media (max-width: 599px) {
    @content;
  }
}

// Small tablets (600px - 767px)
@mixin tablet-sm {
  @media (min-width: 600px) and (max-width: 767px) {
    @content;
  }
}

// Tablets (768px+)
@mixin tablet {
  @media (min-width: 768px) {
    @content;
  }
}

// Desktop (1024px+)
@mixin desktop {
  @media (min-width: 1024px) {
    @content;
  }
}

// Large Desktop (1200px+)
@mixin desktop-lg {
  @media (min-width: 1200px) {
    @content;
  }
}

// Extra Large Desktop (1440px+)
@mixin desktop-xl {
  @media (min-width: 1440px) {
    @content;
  }
}

// Custom breakpoint
@mixin respond-to($breakpoint) {
  @media (min-width: $breakpoint) {
    @content;
  }
}

// Between breakpoints
@mixin between($min, $max) {
  @media (min-width: $min) and (max-width: $max) {
    @content;
  }
}

// ========================================
// 2. FLEXBOX UTILITIES
// ========================================

@mixin flex-center($direction: row) {
  display: flex;
  align-items: center;
  justify-content: center;
  flex-direction: $direction;
}

@mixin flex-between {
  display: flex;
  align-items: center;
  justify-content: space-between;
}

@mixin flex-start {
  display: flex;
  align-items: center;
  justify-content: flex-start;
}

@mixin flex-end {
  display: flex;
  align-items: center;
  justify-content: flex-end;
}

@mixin flex-column-center {
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
}

@mixin flex-wrap($gap: 16px) {
  display: flex;
  flex-wrap: wrap;
  gap: $gap;
}

// ========================================
// 3. GRID UTILITIES
// ========================================

@mixin grid($columns: 3, $gap: 24px) {
  display: grid;
  grid-template-columns: repeat($columns, 1fr);
  gap: $gap;
}

@mixin grid-auto-fit($min-width: 250px, $gap: 24px) {
  display: grid;
  grid-template-columns: repeat(auto-fit, minmax($min-width, 1fr));
  gap: $gap;
}

@mixin grid-auto-fill($min-width: 250px, $gap: 24px) {
  display: grid;
  grid-template-columns: repeat(auto-fill, minmax($min-width, 1fr));
  gap: $gap;
}

// ========================================
// 4. TYPOGRAPHY
// ========================================

@mixin heading($size: 2rem, $weight: 700, $color: $text-color) {
  font-size: $size;
  font-weight: $weight;
  color: $color;
  line-height: 1.3;
  margin: 0;
}

@mixin body-text($size: 1rem, $weight: 400, $color: $text-color) {
  font-size: $size;
  font-weight: $weight;
  color: $color;
  line-height: 1.6;
}

@mixin truncate-text {
  white-space: nowrap;
  overflow: hidden;
  text-overflow: ellipsis;
}

@mixin line-clamp($lines: 2) {
  display: -webkit-box;
  -webkit-line-clamp: $lines;
  -webkit-box-orient: vertical;
  overflow: hidden;
  text-overflow: ellipsis;
}

@mixin text-gradient($from: $primary-color, $to: $secondary-color) {
  background: linear-gradient(135deg, $from 0%, $to 100%);
  -webkit-background-clip: text;
  -webkit-text-fill-color: transparent;
  background-clip: text;
}

// ========================================
// 5. BUTTONS & INTERACTIVE ELEMENTS
// ========================================

@mixin button-base {
  display: inline-flex;
  align-items: center;
  justify-content: center;
  padding: 12px 24px;
  border-radius: 8px;
  font-weight: 600;
  font-size: 1rem;
  cursor: pointer;
  border: none;
  transition: all 0.3s ease;
  text-decoration: none;
  
  &:disabled {
    opacity: 0.5;
    cursor: not-allowed;
  }
}

@mixin button-hover($scale: 1.02, $shadow: true) {
  &:hover:not(:disabled) {
    transform: translateY(-2px) scale($scale);
    @if $shadow {
      box-shadow: 0 8px 20px rgba(0, 0, 0, 0.12);
    }
  }
  
  &:active:not(:disabled) {
    transform: translateY(0) scale(0.98);
  }
}

@mixin button-primary {
  @include button-base;
  background-color: $primary-color;
  color: $white-color;
  
  @include button-hover;
  
  &:hover:not(:disabled) {
    background-color: darken($primary-color, 5%);
  }
}

@mixin button-secondary {
  @include button-base;
  background-color: transparent;
  color: $primary-color;
  border: 2px solid $primary-color;
  
  @include button-hover(1.02, false);
  
  &:hover:not(:disabled) {
    background-color: $primary-color;
    color: $white-color;
  }
}

// ========================================
// 6. CARDS & SURFACES
// ========================================

@mixin card($padding: 24px, $radius: 12px, $shadow: true) {
  background-color: $white-color;
  padding: $padding;
  border-radius: $radius;
  border: 1px solid $border-color;
  
  @if $shadow {
    box-shadow: 0 2px 8px rgba(0, 0, 0, 0.04);
  }
}

@mixin card-hover {
  transition: all 0.3s ease;
  
  &:hover {
    transform: translateY(-4px);
    box-shadow: 0 8px 24px rgba(0, 0, 0, 0.12);
  }
}

@mixin glass-card($blur: 10px, $opacity: 0.8) {
  background: rgba(255, 255, 255, $opacity);
  backdrop-filter: blur($blur);
  -webkit-backdrop-filter: blur($blur);
  border: 1px solid rgba(255, 255, 255, 0.3);
  box-shadow: 0 8px 32px rgba(0, 0, 0, 0.1);
}

// ========================================
// 7. STATUS BADGES
// ========================================

@mixin status-badge($bg-color, $text-color) {
  padding: 6px 14px;
  border-radius: 20px;
  font-size: 0.85rem;
  font-weight: 600;
  text-align: center;
  background-color: $bg-color;
  color: $text-color;
  border: 1px solid darken($bg-color, 10%);
  white-space: nowrap;
  display: inline-flex;
  align-items: center;
  gap: 6px;
}

@mixin badge-success {
  @include status-badge(lighten($primary-color, 45%), $primary-color);
}

@mixin badge-warning {
  @include status-badge(lighten($accent-color, 40%), darken($accent-color, 20%));
}

@mixin badge-error {
  @include status-badge(#fee, #c33);
}

@mixin badge-info {
  @include status-badge(lighten($secondary-color, 45%), $secondary-color);
}

// ========================================
// 8. FORM ELEMENTS
// ========================================

@mixin input-base {
  width: 100%;
  padding: 12px 16px;
  border: 1px solid $border-color;
  border-radius: 8px;
  font-size: 1rem;
  font-family: $primary-font;
  transition: all 0.3s ease;
  background-color: $white-color;
  
  &:focus {
    outline: none;
    border-color: $primary-color;
    box-shadow: 0 0 0 3px rgba($primary-color, 0.1);
  }
  
  &::placeholder {
    color: lighten($text-color, 40%);
  }
  
  &:disabled {
    background-color: lighten($border-color, 5%);
    cursor: not-allowed;
  }
}

@mixin input-error {
  border-color: #e74c3c;
  
  &:focus {
    border-color: #e74c3c;
    box-shadow: 0 0 0 3px rgba(231, 76, 60, 0.1);
  }
}

// ========================================
// 9. ANIMATIONS
// ========================================

@mixin fade-in($duration: 0.3s) {
  animation: fadeIn $duration ease-out;
  
  @keyframes fadeIn {
    from {
      opacity: 0;
    }
    to {
      opacity: 1;
    }
  }
}

@mixin slide-in($direction: up, $distance: 20px, $duration: 0.4s) {
  animation: slideIn#{capitalize($direction)} $duration ease-out;
  
  @if $direction == up {
    @keyframes slideInUp {
      from {
        opacity: 0;
        transform: translateY($distance);
      }
      to {
        opacity: 1;
        transform: translateY(0);
      }
    }
  } @else if $direction == down {
    @keyframes slideInDown {
      from {
        opacity: 0;
        transform: translateY(-$distance);
      }
      to {
        opacity: 1;
        transform: translateY(0);
      }
    }
  } @else if $direction == left {
    @keyframes slideInLeft {
      from {
        opacity: 0;
        transform: translateX(-$distance);
      }
      to {
        opacity: 1;
        transform: translateX(0);
      }
    }
  } @else if $direction == right {
    @keyframes slideInRight {
      from {
        opacity: 0;
        transform: translateX($distance);
      }
      to {
        opacity: 1;
        transform: translateX(0);
      }
    }
  }
}

@mixin pulse($scale: 1.05) {
  animation: pulse 2s ease-in-out infinite;
  
  @keyframes pulse {
    0%, 100% {
      transform: scale(1);
    }
    50% {
      transform: scale($scale);
    }
  }
}

@mixin spin($duration: 1s) {
  animation: spin $duration linear infinite;
  
  @keyframes spin {
    to {
      transform: rotate(360deg);
    }
  }
}

// ========================================
// 10. LOADING & SKELETON
// ========================================

@mixin skeleton-loading {
  background: linear-gradient(
    90deg,
    lighten($border-color, 3%) 25%,
    lighten($border-color, 8%) 50%,
    lighten($border-color, 3%) 75%
  );
  background-size: 200% 100%;
  animation: loading 1.5s ease-in-out infinite;
  
  @keyframes loading {
    0% {
      background-position: 200% 0;
    }
    100% {
      background-position: -200% 0;
    }
  }
}

@mixin spinner($size: 40px, $color: $primary-color, $thickness: 4px) {
  width: $size;
  height: $size;
  border: $thickness solid lighten($color, 30%);
  border-top-color: $color;
  border-radius: 50%;
  animation: spin 1s linear infinite;
}

// ========================================
// 11. SCROLL & OVERFLOW
// ========================================

@mixin custom-scrollbar($width: 8px, $track-color: #f1f1f1, $thumb-color: $primary-color) {
  &::-webkit-scrollbar {
    width: $width;
    height: $width;
  }
  
  &::-webkit-scrollbar-track {
    background: $track-color;
    border-radius: 10px;
  }
  
  &::-webkit-scrollbar-thumb {
    background: lighten($thumb-color, 20%);
    border-radius: 10px;
    
    &:hover {
      background: $thumb-color;
    }
  }
  
  // Firefox
  scrollbar-width: thin;
  scrollbar-color: lighten($thumb-color, 20%) $track-color;
}

@mixin hide-scrollbar {
  -ms-overflow-style: none;
  scrollbar-width: none;
  
  &::-webkit-scrollbar {
    display: none;
  }
}

// ========================================
// 12. SWITCH TOGGLE
// ========================================

@mixin switch-toggle($width: 44px, $height: 24px) {
  .switch {
    position: relative;
    display: inline-block;
    width: $width;
    height: $height;
    
    input {
      opacity: 0;
      width: 0;
      height: 0;
      
      &:focus + .slider {
        box-shadow: 0 0 0 3px rgba($primary-color, 0.2);
      }
    }

    .slider {
      position: absolute;
      cursor: pointer;
      top: 0;
      left: 0;
      right: 0;
      bottom: 0;
      background-color: #ccc;
      transition: 0.4s;
      border-radius: $height;

      &:before {
        position: absolute;
        content: "";
        height: $height - 6px;
        width: $height - 6px;
        left: 3px;
        bottom: 3px;
        background-color: white;
        transition: 0.4s;
        border-radius: 50%;
      }
    }

    input:checked + .slider {
      background-color: $primary-color;
    }

    input:checked + .slider:before {
      transform: translateX($width - $height);
    }
    
    input:disabled + .slider {
      opacity: 0.5;
      cursor: not-allowed;
    }
  }
}

// ========================================
// 13. UTILITIES
// ========================================

@mixin container($max-width: $container-max-width, $padding: 20px) {
  max-width: $max-width;
  margin: 0 auto;
  padding-left: $padding;
  padding-right: $padding;
}

@mixin aspect-ratio($width: 16, $height: 9) {
  position: relative;
  
  &:before {
    content: '';
    display: block;
    padding-top: percentage($height / $width);
  }
  
  > * {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
  }
}

@mixin overlay($color: rgba(0, 0, 0, 0.5)) {
  position: relative;
  
  &:before {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background-color: $color;
    z-index: 1;
  }
}

@mixin absolute-center {
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
}

// ========================================
// 14. ACCESSIBILITY
// ========================================

@mixin visually-hidden {
  position: absolute;
  width: 1px;
  height: 1px;
  padding: 0;
  margin: -1px;
  overflow: hidden;
  clip: rect(0, 0, 0, 0);
  white-space: nowrap;
  border-width: 0;
}

@mixin focus-visible {
  &:focus-visible {
    outline: 3px solid rgba($primary-color, 0.5);
    outline-offset: 2px;
  }
}

@mixin reduced-motion {
  @media (prefers-reduced-motion: reduce) {
    animation-duration: 0.01ms !important;
    animation-iteration-count: 1 !important;
    transition-duration: 0.01ms !important;
  }
}

// ========================================
// 15. AUCTION-SPECIFIC MIXINS
// ========================================

@mixin countdown-timer($size: 2.5rem, $color: $primary-color) {
  font-size: $size;
  font-weight: 700;
  color: $color;
  letter-spacing: 2px;
  font-family: 'Courier New', monospace;
  text-align: center;
}

@mixin price-display($size: 2.5rem, $weight: 700) {
  font-size: $size;
  font-weight: $weight;
  color: $text-color;
  font-family: $primary-font;
  
  &::after {
    content: ' ₫';
    font-size: 0.8em;
    opacity: 0.8;
  }
}

@mixin bid-indicator($status: 'winning') {
  position: relative;
  padding-left: 20px;
  
  &:before {
    content: '';
    position: absolute;
    left: 0;
    top: 50%;
    transform: translateY(-50%);
    width: 12px;
    height: 12px;
    border-radius: 50%;
    
    @if $status == 'winning' {
      background-color: $primary-color;
      box-shadow: 0 0 8px rgba($primary-color, 0.6);
    } @else if $status == 'outbid' {
      background-color: #e74c3c;
      box-shadow: 0 0 8px rgba(231, 76, 60, 0.6);
    } @else {
      background-color: #95a5a6;
    }
  }
}